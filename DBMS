<html>
<head>
 <title>Database Management System </title>
</head>
 <body>
    <h1>Database Management System</h1>
  <ol>
  <li><h3>Data</h3></li>
        <p>Data are the collection of raw facts and figure which are unorganized, uninterpreted, and isolated, which doesnâ€™t give any particular sense. They are randomly gathered. So that they can be processed to obtain the desired result.</p>
  Data types<br>
  <p>Data types define the kind of data that can be stored and manipulated within a database. Common data types include integers, floating-point numbers, characters, strings, dates, and Boolean values. Choosing the correct data type is essential for efficient storage and accurate data processing.</p>

  <li><h3>Database</h3></li>
  <p>A database is an organized collection of data that is stored and accessed electronically. It allows efficient storage, retrieval, and management of data. Databases are designed to handle large amounts of information and support multiple users simultaneously.</p>

 <h4>Types of Database Management Systems (DBMS)</h4>
    <p>There are several types of Database Management Systems (DBMS), broadly categorized into relational, NoSQL, hierarchical, and object-oriented. Each type offers unique advantages and is suitable for different data management needs.</p>

    <h4>a. Relational DBMS (RDBMS)</h4>
    <p>RDBMS stores data in tables with rows and columns, using Structured Query Language (SQL) for data manipulation.</p>
    <ul>
        <li>Examples: MySQL, PostgreSQL, Microsoft SQL Server</li>
        <li>Advantages: Structured data management and support for complex queries</li>
    </ul>

    <h4>b. NoSQL DBMS</h4>
    <p>NoSQL databases handle unstructured or semi-structured data, offering flexibility and scalability.</p>
    <ul>
        <li>Examples: MongoDB, Cassandra, Redis</li>
        <li>Advantages: Schema-less design, ideal for big data and real-time applications</li>
    </ul>

    <h4>c. Hierarchical DBMS</h4>
    <p>Hierarchical DBMS organizes data in a tree-like structure with parent-child relationships.</p>
    <ul>
        <li>Advantages: Efficient for one-to-many relationships</li>
        <li>Commonly used in mainframe systems</li>
    </ul>

    <h4>d. Object-Oriented DBMS (OODBMS)</h4>
    <p>OODBMS stores data as objects, supporting object-oriented programming concepts like inheritance.</p>
    <ul>
        <li>Advantages: Suitable for complex data types and object-oriented applications</li>
    </ul>

  <li><h3>software\system</h3></li>
  <ul>
    <li>Database Management System</li>
    <p>A Database Management System (DBMS) is software that enables users to define, create, maintain, and control access to databases. It provides tools to store, retrieve, and manipulate data efficiently.</p>
    <li>Accounting System</li>
    <p>An accounting system is a software application designed to record and process accounting transactions within functional modules such as accounts payable, accounts receivable, payroll, and trial balance.</p>
    <li>Attendance System</li>
    <p>An attendance system is used to track and manage the attendance of individuals, such as employees or students, often integrating with payroll or reporting tools.</p>
  </ul>

  <li><h3>Software Development</h3></li>
  <ul>
    <li>Database Design</li>
    <p>Database design is the process of creating a detailed data model of a database. It involves defining tables, relationships, keys, and constraints to ensure efficient and logical data storage.</p>
    <li>Database Administration</li>
    <p>Database administration involves maintaining and managing the database system, including tasks like performance tuning, backups, security, and ensuring data availability.</p>
  </ul>

  <li><h3>tools</h3></li>
  <ul>
    <li>Server</li>
    <p>A server is a powerful computer or software that provides database services to multiple clients or applications over a network.</p>
    <li>SQL</li>
    <p>SQL (Structured Query Language) is the standard language used to communicate with and manipulate databases. It allows users to perform operations such as querying, updating, and managing database structures.</p>
    <ol type=a>
      <li>DDL</li>
      <p>Data Definition Language (DDL) includes SQL commands such as CREATE, ALTER, and DROP, which are used to define and modify database structures.</p>
      <li>DML</li>
      <p>Data Manipulation Language (DML) consists of SQL commands like INSERT, UPDATE, and DELETE, which are used to manipulate the data stored in the database.</p>
      <li>DQL</li>
      <p>Data Query Language (DQL) mainly involves the SELECT statement used to query or retrieve data from the database.</p>
      <li>DCL</li>
      <p>Data Control Language (DCL) includes commands such as GRANT and REVOKE, which control access permissions to the database.</p>
      <li>SQL Joins</li>
      <p>SQL Joins are used to combine rows from two or more tables based on a related column between them, enabling complex queries and data retrieval.</p>
    </ol>
  </ul>
  </ol>

<h3>CRUD Operation (Create Read Update Delete )</h3><br>
    <p> CRUD, which stands for Create, Read, Update, and Delete, represents the four fundamental operations for managing data in a database. These operations are used to interact with data stored in tables or other storage structures within a database system.
Here's a breakdown of each CRUD operation: <br>
<ol type=a>
<li>Create:</li>
This operation adds new data records to the database. For example, inserting a new user into a "users" table. In SQL, this is typically done with the INSERT statement.
<li>Read:</li>
This operation retrieves existing data from the database. For instance, fetching all user records or retrieving a specific user based on their ID. In SQL, this is typically done with the SELECT statement.
<li>Update:</li>
This operation modifies existing data records in the database. For example, updating a user's email address. In SQL, this is typically done with the UPDATE statement.
<li>Delete:</li>
This operation removes data records from the database. For example, deleting a user record. In SQL, this is typically done with the DELETE statement.</p>
</ol>

<h3>Keys in Database</h3><br>
    <p>In database management, keys are essential components that uniquely identify records and establish relationships between tables. They help organize data, ensure data integrity, and enable efficient data retrieval.  
Common types of keys include primary keys, foreign keys, unique keys, and candidate keys, each serving a specific purpose in maintaining the database structure.</p>

 <h3>constraints in Database</h3><br>
    <p>In a Database Management System (DBMS), constraints are rules that enforce limits on the data that can be stored in a table, ensuring data integrity and consistency. These rules define what data is valid and what relationships exist between tables, preventing the storage of inaccurate, inconsistent, or invalid data.
Common constraints include NOT NULL, UNIQUE, PRIMARY KEY, FOREIGN KEY, and CHECK constraints.</p>

 <h3>Anomalies in Database</h3><br>
      <p>Database anomalies are problems that can arise in database design, particularly when data is not properly normalized, leading to data inconsistencies and difficulties in manipulating the data. These anomalies can manifest in three main forms: insertion, update, and deletion anomalies.
These anomalies can cause redundant or inconsistent data, leading to potential errors and inefficiencies in database operations.</p>

 <h3>Normalization in Database</h3><br>
 <p>The process of breaking down or decomposing a complex relation into simple relations. It reduces redundancy (unnecessary repetition of data) using the principle of non-loss decomposition in which tables are reduced to smaller tables without loss of information.

Normalization is the database design process in which a complex database table is broken down into simple separate tables. It makes the data model more flexible and easier to maintain.

EF Codd introduced a few rules for normalizing the database in 1970, and these rules are known as normal forms. This process minimizes and controls the duplication of data in a database and also provides a rapid search for data from the database.</p>

 <h2>Database Security</h2><br>
<p>Database security refers to the measures, policies, and practices used to protect databases from unauthorized access, misuse, or destruction. It involves securing the data within the database, the database management system (DBMS), and any associated applications. The goal is to ensure data confidentiality, integrity, and availability (CIA). <br>

Key Aspects of Database Security:<br>
<ol type=a>

<li>Confidentiality:</li><ul><li> Protecting sensitive data from unauthorized disclosure. This can be achieved through encryption, access controls, and data masking.</li></ul>
<li>Integrity: </li><ul><li>Ensuring the accuracy and consistency of data stored in the database. This involves implementing data validation, audit trails, and data backup and recovery mechanisms.</li></ul>
<li>Availability:</li><ul><li> Ensuring that authorized users can access the database when they need to. This includes implementing redundancy, disaster recovery plans, and performance optimization techniques.</li></ul>
<li>Authentication and Authorization:</li><ul><li> Verifying the identity of users and granting them the appropriate level of access to the database.
<li>Access Control:</li><ul><li> Limiting access to database resources based on user roles and permissions.</li></ul>

<li>Data Encryption:</li><ul><li> Protecting data while it's stored in the database and during transmission.</li></ul>

<li>Regular Backups: </li><ul><li>Creating copies of the database so that data can be restored in case of a failure or disaster. </li></ul> 

<li>Database Activity Monitoring:</li><ul><li> Monitoring database activity to detect and prevent malicious activity.</li></ul>

<li>Security Audits:</li><ul><li> Regularly reviewing security configurations and policies to ensure they are effective. </li></ul> 

<li>Security Patches and Updates:</li><ul><li> Keeping the database and DBMS software up-to-date with the latest security patches. </li></ul> </p>

</body>
</html>
